{{ Originaltitel: Diffuse Reflexion und Schatten }}

Die diffuse Reflexion welche in der .xml Modelldatei under <lighting> (de-)aktiviert wird, berechnet sich unabhängig vom Ort des Betrachters. Es spielen die Oberflächennormale der beleuchteten Fläche, die Orte der Lichtquellen und die Farben der beleuchteten Fläche und der Lichtquellen eine Rolle. Es wird angenommen, dass die beleuchtete Fläche Licht in alle möglichen Richtungen gleichmäßig reflektiert. Dabei bestimmt der Einfallswinkel des eingehenden Lichtes die Intensität des reflektierten Lichtes. Für die Umsetzung wurde die Intensität des einfallenden Lichtes mit dem Kosinus des Winkels zwischen Oberflächennormale und einfallendem Lichtstrahl multipliziert um die Intensität des reflektierten Lichtes zu berechnen. Die Farbabhängigkeit des reflektierten Lichtes wurde durch die Multiplikation jedes Farbkanal-Wertes des Eingangslichtes mit dem entsprechenden Farbkanal-Wert der beleuchteten Oberfläche multipliziert um den Farbkanal-Wert des reflektierten Lichtes zu bilden. Das setzt vorraus, dass alle Farbwerte auf Eins normiert sind.
Um Schattenwurf darzustellen muss berechnet werden, ob zwischen dem Reflexionspunkt und der Lichtquelle ein Objekt liegt. Dazu wird zunächst eine Gerade vom Reflexionspunkt zur Lichtquelle gezogen. Diese Gerade wird durch folgende Funktion beschrieben: P = P_0 + P_1*t. Wobei P der Vektor zu einem beliebigen Punkt auf der Geraden, P_0 ein Vektor auf den Ursprung der Geraden und P_1 der Richtungsvektor der Geraden ist. Hier entspricht P_0 dem Vektor zum Reflexionspunkt und P_1 dem Vektor von Reflexionspunkt zur Lichtquelle. Die Ebene in der sich das möglicherweise verdeckende Objekt befindet wird durch die Normalengleichung beschrieben: (P-A)*n=0. Wobei A der Stützvektor der Ebene ist und hier dem Vektor auf die erste Koordinate des Objekts entspricht. n ist der Normalenvektor der Ebene und hier auch des Objekts. Jetzt wird die Geradengleichung in die Ebenengleichung eingesetzt und nach t aufgelöst um den Schnittpunkt der beiden Gleichungen zu bestimmen: t = ((A-P_0)*n)/(P_1*n). Jetzt kann t berechnet werden und mithilfe der Geradengleichung der Punkt gefunden werden, bei welchem der Lichtstrahl die Ebene des möglicherweise verdeckenden Objekts passiert. Jetzt muss nur noch bestimmt werden, ob dieser Punkt auch innerhalb des Objekts liegt. Bei dem jetzigen Stand des Programms können nur Dreiecke erzeugt werden und es wird hier auch nur auf die Problemlösung mit Dreiecken eingegangen. Jetzt wird der erhaltene Schnittpunkt mit möglichst vielen Punkten auf dem Dreieck verglichen und entschieden ob dieser innerhalb oder außerhalb des Dreiecks liegt. Um das Dreieck zu beschreiben wird folgende Funktion verwendet: P = A + x*AB + y*AC. Wobei P der Vektor auf einen beliebigen Punkt, AB der Vektor von der ersten Ecke zur zweiten Ecke und AC der Vektor von der ersten Ecke zur dritten Ecke des Dreiecks ist. x und y sind variabel und dürfen nur Werte von Null bis Eins annehmen. Außerdem gilt: x + y <= 1. In der Praktischen umsetzung wird das Dreieck in gleichmäßigen Schritten mithilfe dieser Funktionen abgetastet. Bei jedem abgetasteten Punkt wird die Distanz zum vorher berechneten Schnittpunkt mit der Ebene berechnet. Falls die Distanz kleiner als die Schrittlänge multipliziert mit dem Kehrwert aus der Wurzel von Zwei ist, gilt der Schnittpunkt als innerhalb des Dreiecks. Diese ist die maximal mögliche Distanz bei der dieser Schnittpunkt noch innerhalb des Dreiecks liegen kann. 
